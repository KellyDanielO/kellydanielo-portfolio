(globalThis.TURBOPACK = globalThis.TURBOPACK || []).push(["static/chunks/node_modules_aa8282._.js", {

"[project]/node_modules/typeit-react/dist/index.es.js [app-client] (ecmascript)": (({ r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, g: global, __dirname, k: __turbopack_refresh__ }) => (() => {
"use strict";

__turbopack_esm__({
    "default": ()=>TypeIt
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/next/dist/compiled/react/index.js [app-client] (ecmascript)");
"__TURBOPACK__ecmascript__hoisting__location__";
var __defProp = Object.defineProperty;
var __defNormalProp = (obj, key, value)=>key in obj ? __defProp(obj, key, {
        enumerable: true,
        configurable: true,
        writable: true,
        value
    }) : obj[key] = value;
var __publicField = (obj, key, value)=>{
    __defNormalProp(obj, typeof key !== "symbol" ? key + "" : key, value);
    return value;
};
var __accessCheck = (obj, member, msg)=>{
    if (!member.has(obj)) throw TypeError("Cannot " + msg);
};
var __privateGet = (obj, member, getter)=>{
    __accessCheck(obj, member, "read from private field");
    return getter ? getter.call(obj) : member.get(obj);
};
var __privateAdd = (obj, member, value)=>{
    if (member.has(obj)) throw TypeError("Cannot add the same private member more than once");
    member instanceof WeakSet ? member.add(obj) : member.set(obj, value);
};
var __privateMethod = (obj, member, method)=>{
    __accessCheck(obj, member, "access private method");
    return method;
};
var _empty, empty_fn, _fire, fire_fn, _move, move_fn, _prepLoop, prepLoop_fn, _fireItemWithContext, fireItemWithContext_fn, _wait, wait_fn, _attachCursor, attachCursor_fn, _elementIsInput, elementIsInput_fn, _queueAndReturn, queueAndReturn_fn, _maybeAppendPause, maybeAppendPause_fn, _generateTemporaryOptionQueueItems, generateTemporaryOptionQueueItems_fn, _updateOptions, updateOptions_fn, _generateQueue, generateQueue_fn, _buildOptions, _prependHardcodedStrings, prependHardcodedStrings_fn, _setUpCursor, setUpCursor_fn, _addSplitPause, addSplitPause_fn, _type, type_fn, _delete, delete_fn, _removeNode, removeNode_fn, _getPace, getPace_fn, _derivedCursorPosition, derivedCursorPosition_get, _isInput, isInput_get, _shouldRenderCursor, shouldRenderCursor_get, _allChars, allChars_get, _a;
;
const isArray = (thing)=>Array.isArray(thing);
const asArray = (value)=>isArray(value) ? value : [
        value
    ];
let Queue = function(initialItems) {
    let add = function(steps) {
        asArray(steps).forEach((step)=>{
            var _a2;
            return _q.set(Symbol((_a2 = step.char) == null ? void 0 : _a2.innerText), buildQueueItem({
                ...step
            }));
        });
        return this;
    };
    let getTypeable = ()=>rawValues().filter((value)=>value.typeable);
    let set = function(index, item) {
        let keys = [
            ..._q.keys()
        ];
        _q.set(keys[index], buildQueueItem(item));
    };
    let buildQueueItem = (queueItem)=>{
        queueItem.shouldPauseCursor = function() {
            return Boolean(this.typeable || this.cursorable || this.deletable);
        };
        return queueItem;
    };
    let reset = function() {
        _q.forEach((item)=>delete item.done);
    };
    let wipe = function() {
        _q = /* @__PURE__ */ new Map();
        add(initialItems);
    };
    let getQueue = ()=>_q;
    let rawValues = ()=>Array.from(_q.values());
    let destroy = (key)=>_q.delete(key);
    let getItems = (all = false)=>all ? rawValues() : rawValues().filter((i)=>!i.done);
    let done = (key, shouldDestroy = false)=>shouldDestroy ? _q.delete(key) : _q.get(key).done = true;
    let _q = /* @__PURE__ */ new Map();
    add(initialItems);
    return {
        add,
        set,
        wipe,
        done,
        reset,
        destroy,
        getItems,
        getQueue,
        getTypeable
    };
};
const DATA_ATTRIBUTE = "data-typeit-id";
const CURSOR_CLASS = "ti-cursor";
const END = "END";
const DEFAULT_STATUSES = {
    started: false,
    completed: false,
    frozen: false,
    destroyed: false
};
const DEFAULT_OPTIONS = {
    breakLines: true,
    cursor: {
        autoPause: true,
        autoPauseDelay: 500,
        animation: {
            frames: [
                0,
                0,
                1
            ].map((n)=>{
                return {
                    opacity: n
                };
            }),
            options: {
                iterations: Infinity,
                easing: "steps(2, start)",
                fill: "forwards"
            }
        }
    },
    cursorChar: "|",
    cursorSpeed: 1e3,
    deleteSpeed: null,
    html: true,
    lifeLike: true,
    loop: false,
    loopDelay: 750,
    nextStringDelay: 750,
    speed: 100,
    startDelay: 250,
    startDelete: false,
    strings: [],
    waitUntilVisible: false,
    beforeString: ()=>{},
    afterString: ()=>{},
    beforeStep: ()=>{},
    afterStep: ()=>{},
    afterComplete: ()=>{}
};
const PLACEHOLDER_CSS = `[${DATA_ATTRIBUTE}]:before {content: '.'; display: inline-block; width: 0; visibility: hidden;}`;
const createElement = (el)=>document.createElement(el);
const createTextNode = (content)=>document.createTextNode(content);
const appendStyleBlock = (styles, id = "")=>{
    let styleBlock = createElement("style");
    styleBlock.id = id;
    styleBlock.appendChild(createTextNode(styles));
    document.head.appendChild(styleBlock);
};
const calculateDelay = (delayArg)=>{
    if (!isArray(delayArg)) {
        delayArg = [
            delayArg / 2,
            delayArg / 2
        ];
    }
    return delayArg;
};
const randomInRange = (value, range2)=>{
    return Math.abs(Math.random() * (value + range2 - (value - range2)) + (value - range2));
};
let range = (val)=>val / 2;
function calculatePace(options) {
    let { speed, deleteSpeed, lifeLike } = options;
    deleteSpeed = deleteSpeed !== null ? deleteSpeed : speed / 3;
    return lifeLike ? [
        randomInRange(speed, range(speed)),
        randomInRange(deleteSpeed, range(deleteSpeed))
    ] : [
        speed,
        deleteSpeed
    ];
}
const toArray = (val)=>Array.from(val);
let expandTextNodes = (element)=>{
    [
        ...element.childNodes
    ].forEach((child)=>{
        if (child.nodeValue) {
            [
                ...child.nodeValue
            ].forEach((c)=>{
                child.parentNode.insertBefore(createTextNode(c), child);
            });
            child.remove();
            return;
        }
        expandTextNodes(child);
    });
    return element;
};
const getParsedBody = (content)=>{
    let doc = document.implementation.createHTMLDocument();
    doc.body.innerHTML = content;
    return expandTextNodes(doc.body);
};
function walkElementNodes(element, shouldReverse = false, shouldIncludeCursor = false) {
    let cursor = element.querySelector(`.${CURSOR_CLASS}`);
    let walker = document.createTreeWalker(element, NodeFilter.SHOW_ALL, {
        acceptNode: (node)=>{
            var _a2, _b;
            if (cursor && shouldIncludeCursor) {
                if ((_a2 = node.classList) == null ? void 0 : _a2.contains(CURSOR_CLASS)) {
                    return NodeFilter.FILTER_ACCEPT;
                }
                if (cursor.contains(node)) {
                    return NodeFilter.FILTER_REJECT;
                }
            }
            return ((_b = node.classList) == null ? void 0 : _b.contains(CURSOR_CLASS)) ? NodeFilter.FILTER_REJECT : NodeFilter.FILTER_ACCEPT;
        }
    });
    let nextNode;
    let nodes = [];
    while(nextNode = walker.nextNode()){
        if (!nextNode.originalParent) {
            nextNode.originalParent = nextNode.parentNode;
        }
        nodes.push(nextNode);
    }
    return shouldReverse ? nodes.reverse() : nodes;
}
function chunkStringAsHtml(string) {
    return walkElementNodes(getParsedBody(string));
}
function maybeChunkStringAsHtml(str, asHtml = true) {
    return asHtml ? chunkStringAsHtml(str) : toArray(str).map(createTextNode);
}
const isNumber = (value)=>Number.isInteger(value);
const countStepsToSelector = ({ queueItems, selector, cursorPosition, to })=>{
    if (isNumber(selector)) {
        return selector * -1;
    }
    let isMovingToEnd = new RegExp(END, "i").test(to);
    let selectorIndex = selector ? [
        ...queueItems
    ].reverse().findIndex(({ char })=>{
        let parentElement = char.parentElement;
        let parentMatches = parentElement.matches(selector);
        if (isMovingToEnd && parentMatches) {
            return true;
        }
        return parentMatches && parentElement.firstChild.isSameNode(char);
    }) : -1;
    if (selectorIndex < 0) {
        selectorIndex = isMovingToEnd ? 0 : queueItems.length - 1;
    }
    let offset = isMovingToEnd ? 0 : 1;
    return selectorIndex - cursorPosition + offset;
};
const destroyTimeouts = (timeouts)=>{
    timeouts.forEach(clearTimeout);
    return [];
};
const duplicate = (value, times)=>new Array(times).fill(value);
let beforePaint = (cb)=>{
    return new Promise((resolve)=>{
        requestAnimationFrame(async ()=>{
            resolve(await cb());
        });
    });
};
let getAnimationFromElement = (element)=>{
    return element == null ? void 0 : element.getAnimations().find((animation)=>{
        return animation.id === element.dataset.tiAnimationId;
    });
};
let setCursorAnimation = ({ cursor, frames, options })=>{
    let animation = cursor.animate(frames, options);
    animation.pause();
    animation.id = cursor.dataset.tiAnimationId;
    beforePaint(()=>{
        beforePaint(()=>{
            animation.play();
        });
    });
    return animation;
};
let rebuildCursorAnimation = ({ cursor, options, cursorOptions })=>{
    if (!cursor || !cursorOptions) return;
    let animation = getAnimationFromElement(cursor);
    let oldCurrentTime;
    if (animation) {
        options.delay = animation.effect.getComputedTiming().delay;
        oldCurrentTime = animation.currentTime;
        animation.cancel();
    }
    let newAnimation = setCursorAnimation({
        cursor,
        frames: cursorOptions.animation.frames,
        options
    });
    if (oldCurrentTime) {
        newAnimation.currentTime = oldCurrentTime;
    }
    return newAnimation;
};
let execute = (queueItem)=>{
    var _a2;
    return (_a2 = queueItem.func) == null ? void 0 : _a2.call(null);
};
let fireItem = async ({ index, queueItems, wait: wait2, cursor, cursorOptions })=>{
    let queueItem = queueItems[index][1];
    let instantQueue = [];
    let tempIndex = index;
    let futureItem = queueItem;
    let shouldBeGrouped = ()=>futureItem && !futureItem.delay;
    let shouldPauseCursor = queueItem.shouldPauseCursor() && cursorOptions.autoPause;
    while(shouldBeGrouped()){
        instantQueue.push(futureItem);
        shouldBeGrouped() && tempIndex++;
        futureItem = queueItems[tempIndex] ? queueItems[tempIndex][1] : null;
    }
    if (instantQueue.length) {
        await beforePaint(async ()=>{
            for (let q of instantQueue){
                await execute(q);
            }
        });
        return tempIndex - 1;
    }
    let animation = getAnimationFromElement(cursor);
    let options;
    if (animation) {
        options = {
            ...animation.effect.getComputedTiming(),
            delay: shouldPauseCursor ? cursorOptions.autoPauseDelay : 0
        };
    }
    await wait2(async ()=>{
        if (animation && shouldPauseCursor) {
            animation.cancel();
        }
        await beforePaint(()=>{
            execute(queueItem);
        });
    }, queueItem.delay);
    await rebuildCursorAnimation({
        cursor,
        options,
        cursorOptions
    });
    return index;
};
const fireWhenVisible = (element, func)=>{
    let observer = new IntersectionObserver((entries, observer2)=>{
        entries.forEach((entry)=>{
            if (entry.isIntersecting) {
                func();
                observer2.unobserve(element);
            }
        });
    }, {
        threshold: 1
    });
    observer.observe(element);
};
const generateHash = ()=>Math.random().toString().substring(2, 9);
const isInput = (el)=>{
    return "value" in el;
};
let getAllChars = (element)=>{
    if (isInput(element)) {
        return toArray(element.value);
    }
    return walkElementNodes(element, true).filter((c)=>!(c.childNodes.length > 0));
};
let handleFunctionalArg = (arg)=>{
    return typeof arg === "function" ? arg() : arg;
};
let select = (selector, element = document, all = false)=>{
    return element[`querySelector${all ? "All" : ""}`](selector);
};
let isBodyElement = (node)=>/body/i.test(node == null ? void 0 : node.tagName);
let insertIntoElement = (originalTarget, character)=>{
    if (isInput(originalTarget)) {
        originalTarget.value = `${originalTarget.value}${character.textContent}`;
        return;
    }
    character.innerHTML = "";
    let target = isBodyElement(character.originalParent) ? originalTarget : // If we add one-off fresh elements, there will be no
    // "originalParent", so always fall back to the default target.
    character.originalParent || originalTarget;
    target.insertBefore(character, select("." + CURSOR_CLASS, target) || null);
};
const isNonVoidElement = (el)=>/<(.+)>(.*?)<\/(.+)>/.test(el.outerHTML);
const merge = (originalObj, newObj)=>Object.assign({}, originalObj, newObj);
let processCursorOptions = (cursorOptions)=>{
    var _a2, _b;
    if (typeof cursorOptions === "object") {
        let newOptions = {};
        let { frames: defaultFrames, options: defaultOptions } = DEFAULT_OPTIONS.cursor.animation;
        newOptions.animation = cursorOptions.animation || {};
        newOptions.animation.frames = ((_a2 = cursorOptions.animation) == null ? void 0 : _a2.frames) || defaultFrames;
        newOptions.animation.options = merge(defaultOptions, ((_b = cursorOptions.animation) == null ? void 0 : _b.options) || {});
        newOptions.autoPause = cursorOptions.autoPause ?? DEFAULT_OPTIONS.cursor.autoPause;
        newOptions.autoPauseDelay = cursorOptions.autoPauseDelay || DEFAULT_OPTIONS.cursor.autoPauseDelay;
        return newOptions;
    }
    if (cursorOptions === true) {
        return DEFAULT_OPTIONS.cursor;
    }
    return cursorOptions;
};
const removeNode = (node, rootElement)=>{
    if (!node) return;
    let nodeParent = node.parentNode;
    let nodeToRemove = nodeParent.childNodes.length > 1 || nodeParent.isSameNode(rootElement) ? // This parent still needs to exist.
    node : // There's nothing else in there, so just delete the entire thing.
    // By doing this, we clean up markup as we go along.
    nodeParent;
    nodeToRemove.remove();
};
const repositionCursor = (element, allChars, newCursorPosition)=>{
    let nodeToInsertBefore = allChars[newCursorPosition - 1];
    let cursor = select(`.${CURSOR_CLASS}`, element);
    element = (nodeToInsertBefore == null ? void 0 : nodeToInsertBefore.parentNode) || element;
    element.insertBefore(cursor, nodeToInsertBefore || null);
};
function selectorToElement(thing) {
    return typeof thing === "string" ? select(thing) : thing;
}
let cursorFontStyles = {
    "font-family": "",
    "font-weight": "",
    "font-size": "",
    "font-style": "",
    "line-height": "",
    color: "",
    transform: "translateX(-.125em)"
};
let setCursorStyles = (id, element)=>{
    let rootSelector = `[${DATA_ATTRIBUTE}='${id}']`;
    let cursorSelector = `${rootSelector} .${CURSOR_CLASS}`;
    let computedStyles = getComputedStyle(element);
    let customProperties = Object.entries(cursorFontStyles).reduce((accumulator, [item, value])=>{
        return `${accumulator} ${item}: var(--ti-cursor-${item}, ${value || computedStyles[item]});`;
    }, "");
    appendStyleBlock(`${cursorSelector} { display: inline-block; width: 0; ${customProperties} }`, id);
};
function splitOnBreak(str) {
    return str.replace(/<!--(.+?)-->/g, "").trim().split(/<br(?:\s*?)(?:\/)?>/);
}
let updateCursorPosition = (steps, cursorPosition, printedCharacters)=>{
    return Math.min(Math.max(cursorPosition + steps, 0), printedCharacters.length);
};
let wait = (callback, delay, timeouts)=>{
    return new Promise((resolve)=>{
        let cb = async ()=>{
            await callback();
            resolve();
        };
        timeouts.push(setTimeout(cb, delay || 0));
    });
};
let TypeIt$1 = (_a = class {
    constructor(element, options = {}){
        __privateAdd(this, _empty);
        /**
     * Execute items in the queue.
     *
     * @param remember If false, each queue item will be destroyed once executed.
     * @returns
     */ __privateAdd(this, _fire);
        __privateAdd(this, _move);
        /**
     * 1. Reset queue.
     * 2. Reset initial pause.
     */ __privateAdd(this, _prepLoop);
        __privateAdd(this, _fireItemWithContext);
        __privateAdd(this, _wait);
        /**
     * Attach it to the DOM so, along with the required CSS transition.
     */ __privateAdd(this, _attachCursor);
        __privateAdd(this, _elementIsInput);
        __privateAdd(this, _queueAndReturn);
        __privateAdd(this, _maybeAppendPause);
        __privateAdd(this, _generateTemporaryOptionQueueItems);
        __privateAdd(this, _updateOptions);
        /**
     * Based on provided strings, generate a TypeIt queue
     * to be fired for each character in the string.
     */ __privateAdd(this, _generateQueue);
        __privateAdd(this, _prependHardcodedStrings);
        /**
     * Provided it's a non-form element and the options is provided,
     * set up the cursor element for the animation.
     */ __privateAdd(this, _setUpCursor);
        __privateAdd(this, _addSplitPause);
        __privateAdd(this, _type);
        __privateAdd(this, _delete);
        __privateAdd(this, _removeNode);
        __privateAdd(this, _getPace);
        __privateAdd(this, _derivedCursorPosition);
        __privateAdd(this, _isInput);
        __privateAdd(this, _shouldRenderCursor);
        __privateAdd(this, _allChars);
        __publicField(this, "element");
        __publicField(this, "timeouts");
        __publicField(this, "cursorPosition");
        __publicField(this, "predictedCursorPosition");
        __publicField(this, "statuses", {
            started: false,
            completed: false,
            frozen: false,
            destroyed: false
        });
        __publicField(this, "opts");
        __publicField(this, "id");
        __publicField(this, "queue");
        __publicField(this, "cursor");
        __publicField(this, "unfreeze", ()=>{});
        __publicField(this, "is", function(key) {
            return this.statuses[key];
        });
        __privateAdd(this, _buildOptions, (options)=>{
            options.cursor = processCursorOptions(options.cursor ?? DEFAULT_OPTIONS.cursor);
            this.opts.strings = __privateMethod(this, _prependHardcodedStrings, prependHardcodedStrings_fn).call(this, asArray(this.opts.strings));
            this.opts = merge(this.opts, {
                html: !__privateGet(this, _isInput, isInput_get) && this.opts.html,
                nextStringDelay: calculateDelay(this.opts.nextStringDelay),
                loopDelay: calculateDelay(this.opts.loopDelay)
            });
        });
        this.opts = merge(DEFAULT_OPTIONS, options);
        this.element = selectorToElement(element);
        this.timeouts = [];
        this.cursorPosition = 0;
        this.unfreeze = ()=>{};
        this.predictedCursorPosition = null;
        this.statuses = merge({}, DEFAULT_STATUSES);
        this.id = generateHash();
        this.queue = Queue([
            {
                delay: this.opts.startDelay
            }
        ]);
        __privateGet(this, _buildOptions).call(this, options);
        this.cursor = __privateMethod(this, _setUpCursor, setUpCursor_fn).call(this);
        this.element.dataset.typeitId = this.id;
        appendStyleBlock(PLACEHOLDER_CSS);
        if (this.opts.strings.length) {
            __privateMethod(this, _generateQueue, generateQueue_fn).call(this);
        }
    }
    /**
   * Can only be called once.
   */ go() {
        if (this.statuses.started) {
            return this;
        }
        __privateMethod(this, _attachCursor, attachCursor_fn).call(this);
        if (!this.opts.waitUntilVisible) {
            __privateMethod(this, _fire, fire_fn).call(this);
            return this;
        }
        fireWhenVisible(this.element, __privateMethod(this, _fire, fire_fn).bind(this));
        return this;
    }
    destroy(shouldRemoveCursor = true) {
        this.timeouts = destroyTimeouts(this.timeouts);
        handleFunctionalArg(shouldRemoveCursor) && this.cursor && __privateMethod(this, _removeNode, removeNode_fn).call(this, this.cursor);
        this.statuses.destroyed = true;
    }
    reset(rebuild) {
        !this.is("destroyed") && this.destroy();
        if (rebuild) {
            this.queue.wipe();
            rebuild(this);
        } else {
            this.queue.reset();
        }
        this.cursorPosition = 0;
        for(let property in this.statuses){
            this.statuses[property] = false;
        }
        this.element[__privateMethod(this, _elementIsInput, elementIsInput_fn).call(this) ? "value" : "innerHTML"] = "";
        return this;
    }
    type(string, actionOpts = {}) {
        string = handleFunctionalArg(string);
        let { instant } = actionOpts;
        let bookEndQueueItems = __privateMethod(this, _generateTemporaryOptionQueueItems, generateTemporaryOptionQueueItems_fn).call(this, actionOpts);
        let chars = maybeChunkStringAsHtml(string, this.opts.html);
        let charsAsQueueItems = chars.map((char)=>{
            return {
                func: ()=>__privateMethod(this, _type, type_fn).call(this, char),
                char,
                delay: instant || isNonVoidElement(char) ? 0 : __privateMethod(this, _getPace, getPace_fn).call(this),
                typeable: char.nodeType === Node.TEXT_NODE
            };
        });
        let itemsToQueue = [
            bookEndQueueItems[0],
            {
                func: async ()=>await this.opts.beforeString(string, this)
            },
            ...charsAsQueueItems,
            {
                func: async ()=>await this.opts.afterString(string, this)
            },
            bookEndQueueItems[1]
        ];
        return __privateMethod(this, _queueAndReturn, queueAndReturn_fn).call(this, itemsToQueue, actionOpts);
    }
    break(actionOpts = {}) {
        return __privateMethod(this, _queueAndReturn, queueAndReturn_fn).call(this, {
            func: ()=>__privateMethod(this, _type, type_fn).call(this, createElement("BR")),
            typeable: true
        }, actionOpts);
    }
    move(movementArg, actionOpts = {}) {
        movementArg = handleFunctionalArg(movementArg);
        let bookEndQueueItems = __privateMethod(this, _generateTemporaryOptionQueueItems, generateTemporaryOptionQueueItems_fn).call(this, actionOpts);
        let { instant, to } = actionOpts;
        let numberOfSteps = countStepsToSelector({
            queueItems: this.queue.getTypeable(),
            selector: movementArg === null ? "" : movementArg,
            to,
            cursorPosition: __privateGet(this, _derivedCursorPosition, derivedCursorPosition_get)
        });
        let directionalStep = numberOfSteps < 0 ? -1 : 1;
        this.predictedCursorPosition = __privateGet(this, _derivedCursorPosition, derivedCursorPosition_get) + numberOfSteps;
        return __privateMethod(this, _queueAndReturn, queueAndReturn_fn).call(this, [
            bookEndQueueItems[0],
            ...duplicate({
                func: ()=>__privateMethod(this, _move, move_fn).call(this, directionalStep),
                delay: instant ? 0 : __privateMethod(this, _getPace, getPace_fn).call(this),
                cursorable: true
            }, Math.abs(numberOfSteps)),
            bookEndQueueItems[1]
        ], actionOpts);
    }
    exec(func, actionOpts = {}) {
        let bookEndQueueItems = __privateMethod(this, _generateTemporaryOptionQueueItems, generateTemporaryOptionQueueItems_fn).call(this, actionOpts);
        return __privateMethod(this, _queueAndReturn, queueAndReturn_fn).call(this, [
            bookEndQueueItems[0],
            {
                func: ()=>func(this)
            },
            bookEndQueueItems[1]
        ], actionOpts);
    }
    options(opts, actionOpts = {}) {
        opts = handleFunctionalArg(opts);
        __privateMethod(this, _updateOptions, updateOptions_fn).call(this, opts);
        return __privateMethod(this, _queueAndReturn, queueAndReturn_fn).call(this, {}, actionOpts);
    }
    pause(milliseconds, actionOpts = {}) {
        return __privateMethod(this, _queueAndReturn, queueAndReturn_fn).call(this, {
            delay: handleFunctionalArg(milliseconds)
        }, actionOpts);
    }
    delete(numCharacters = null, actionOpts = {}) {
        numCharacters = handleFunctionalArg(numCharacters);
        let bookEndQueueItems = __privateMethod(this, _generateTemporaryOptionQueueItems, generateTemporaryOptionQueueItems_fn).call(this, actionOpts);
        let num = numCharacters;
        let { instant, to } = actionOpts;
        let typeableQueueItems = this.queue.getTypeable();
        let rounds = (()=>{
            if (num === null) {
                return typeableQueueItems.length;
            }
            if (isNumber(num)) {
                return num;
            }
            return countStepsToSelector({
                queueItems: typeableQueueItems,
                selector: num,
                cursorPosition: __privateGet(this, _derivedCursorPosition, derivedCursorPosition_get),
                to
            });
        })();
        return __privateMethod(this, _queueAndReturn, queueAndReturn_fn).call(this, [
            bookEndQueueItems[0],
            ...duplicate({
                func: __privateMethod(this, _delete, delete_fn).bind(this),
                delay: instant ? 0 : __privateMethod(this, _getPace, getPace_fn).call(this, 1),
                deletable: true
            }, rounds),
            bookEndQueueItems[1]
        ], actionOpts);
    }
    freeze() {
        this.statuses.frozen = true;
    }
    /**
   * Like `.go()`, but more... "off the grid."
   *
   * - won't trigger `afterComplete` callback
   * - items won't be replayed after `.reset()`
   *
   * When called, all non-done items will be "flushed" --
   * that is, executed, but not remembered.
   */ flush(cb = ()=>{}) {
        __privateMethod(this, _attachCursor, attachCursor_fn).call(this);
        __privateMethod(this, _fire, fire_fn).call(this, false).then(cb);
        return this;
    }
    getQueue() {
        return this.queue;
    }
    getOptions() {
        return this.opts;
    }
    updateOptions(options) {
        return __privateMethod(this, _updateOptions, updateOptions_fn).call(this, options);
    }
    getElement() {
        return this.element;
    }
    empty(actionOpts = {}) {
        return __privateMethod(this, _queueAndReturn, queueAndReturn_fn).call(this, {
            func: __privateMethod(this, _empty, empty_fn).bind(this)
        }, actionOpts);
    }
}, _empty = new WeakSet(), empty_fn = async function() {
    if (__privateMethod(this, _elementIsInput, elementIsInput_fn).call(this)) {
        this.element.value = "";
        return;
    }
    __privateGet(this, _allChars, allChars_get).forEach(__privateMethod(this, _removeNode, removeNode_fn).bind(this));
    return;
}, _fire = new WeakSet(), fire_fn = async function(remember = true) {
    this.statuses.started = true;
    let cleanUp = (qKey)=>{
        this.queue.done(qKey, !remember);
    };
    try {
        let queueItems = [
            ...this.queue.getQueue()
        ];
        for(let index = 0; index < queueItems.length; index++){
            let [queueKey, queueItem] = queueItems[index];
            if (queueItem.done) continue;
            if (!queueItem.deletable || queueItem.deletable && __privateGet(this, _allChars, allChars_get).length) {
                let newIndex = await __privateMethod(this, _fireItemWithContext, fireItemWithContext_fn).call(this, index, queueItems);
                Array(newIndex - index).fill(index + 1).map((x, y)=>x + y).forEach((i)=>{
                    let [key] = queueItems[i];
                    cleanUp(key);
                });
                index = newIndex;
            }
            cleanUp(queueKey);
        }
        if (!remember) {
            return this;
        }
        this.statuses.completed = true;
        await this.opts.afterComplete(this);
        if (!this.opts.loop) {
            throw "";
        }
        let delay = this.opts.loopDelay;
        __privateMethod(this, _wait, wait_fn).call(this, async ()=>{
            await __privateMethod(this, _prepLoop, prepLoop_fn).call(this, delay[0]);
            __privateMethod(this, _fire, fire_fn).call(this);
        }, delay[1]);
    } catch (e) {}
    return this;
}, _move = new WeakSet(), move_fn = async function(step) {
    this.cursorPosition = updateCursorPosition(step, this.cursorPosition, __privateGet(this, _allChars, allChars_get));
    repositionCursor(this.element, __privateGet(this, _allChars, allChars_get), this.cursorPosition);
}, _prepLoop = new WeakSet(), prepLoop_fn = async function(delay) {
    let derivedCursorPosition = __privateGet(this, _derivedCursorPosition, derivedCursorPosition_get);
    derivedCursorPosition && await __privateMethod(this, _move, move_fn).call(this, {
        value: derivedCursorPosition
    });
    let queueItems = __privateGet(this, _allChars, allChars_get).map((c)=>{
        return [
            Symbol(),
            {
                func: __privateMethod(this, _delete, delete_fn).bind(this),
                delay: __privateMethod(this, _getPace, getPace_fn).call(this, 1),
                deletable: true,
                shouldPauseCursor: ()=>true
            }
        ];
    });
    for(let index = 0; index < queueItems.length; index++){
        await __privateMethod(this, _fireItemWithContext, fireItemWithContext_fn).call(this, index, queueItems);
    }
    this.queue.reset();
    this.queue.set(0, {
        delay
    });
}, _fireItemWithContext = new WeakSet(), fireItemWithContext_fn = function(index, queueItems) {
    return fireItem({
        index,
        queueItems,
        wait: __privateMethod(this, _wait, wait_fn).bind(this),
        cursor: this.cursor,
        cursorOptions: this.opts.cursor
    });
}, _wait = new WeakSet(), wait_fn = async function(callback, delay, silent = false) {
    if (this.statuses.frozen) {
        await new Promise((resolve)=>{
            this.unfreeze = ()=>{
                this.statuses.frozen = false;
                resolve();
            };
        });
    }
    silent || await this.opts.beforeStep(this);
    await wait(callback, delay, this.timeouts);
    silent || await this.opts.afterStep(this);
}, _attachCursor = new WeakSet(), attachCursor_fn = async function() {
    !__privateMethod(this, _elementIsInput, elementIsInput_fn).call(this) && this.cursor && this.element.appendChild(this.cursor);
    if (__privateGet(this, _shouldRenderCursor, shouldRenderCursor_get)) {
        setCursorStyles(this.id, this.element);
        this.cursor.dataset.tiAnimationId = this.id;
        let { animation } = this.opts.cursor;
        let { frames, options } = animation;
        setCursorAnimation({
            frames,
            cursor: this.cursor,
            options: {
                duration: this.opts.cursorSpeed,
                ...options
            }
        });
    }
}, _elementIsInput = new WeakSet(), elementIsInput_fn = function() {
    return isInput(this.element);
}, _queueAndReturn = new WeakSet(), queueAndReturn_fn = function(steps, opts) {
    this.queue.add(steps);
    __privateMethod(this, _maybeAppendPause, maybeAppendPause_fn).call(this, opts);
    return this;
}, _maybeAppendPause = new WeakSet(), maybeAppendPause_fn = function(opts = {}) {
    let delay = opts.delay;
    delay && this.queue.add({
        delay
    });
}, _generateTemporaryOptionQueueItems = new WeakSet(), generateTemporaryOptionQueueItems_fn = function(newOptions = {}) {
    return [
        {
            func: ()=>__privateMethod(this, _updateOptions, updateOptions_fn).call(this, newOptions)
        },
        {
            func: ()=>__privateMethod(this, _updateOptions, updateOptions_fn).call(this, this.opts)
        }
    ];
}, _updateOptions = new WeakSet(), updateOptions_fn = async function(opts) {
    this.opts = merge(this.opts, opts);
}, _generateQueue = new WeakSet(), generateQueue_fn = function() {
    let strings = this.opts.strings.filter((string)=>!!string);
    strings.forEach((string, index)=>{
        this.type(string);
        if (index + 1 === strings.length) {
            return;
        }
        let splitItems = this.opts.breakLines ? [
            {
                func: ()=>__privateMethod(this, _type, type_fn).call(this, createElement("BR")),
                typeable: true
            }
        ] : duplicate({
            func: __privateMethod(this, _delete, delete_fn).bind(this),
            delay: __privateMethod(this, _getPace, getPace_fn).call(this, 1)
        }, this.queue.getTypeable().length);
        __privateMethod(this, _addSplitPause, addSplitPause_fn).call(this, splitItems);
    });
}, _buildOptions = new WeakMap(), _prependHardcodedStrings = new WeakSet(), prependHardcodedStrings_fn = function(strings) {
    let existingMarkup = this.element.innerHTML;
    if (!existingMarkup) {
        return strings;
    }
    this.element.innerHTML = "";
    if (this.opts.startDelete) {
        this.element.innerHTML = existingMarkup;
        expandTextNodes(this.element);
        __privateMethod(this, _addSplitPause, addSplitPause_fn).call(this, duplicate({
            func: __privateMethod(this, _delete, delete_fn).bind(this),
            delay: __privateMethod(this, _getPace, getPace_fn).call(this, 1),
            deletable: true
        }, __privateGet(this, _allChars, allChars_get).length));
        return strings;
    }
    return splitOnBreak(existingMarkup).concat(strings);
}, _setUpCursor = new WeakSet(), setUpCursor_fn = function() {
    if (__privateGet(this, _isInput, isInput_get)) {
        return null;
    }
    let cursor = createElement("span");
    cursor.className = CURSOR_CLASS;
    if (!__privateGet(this, _shouldRenderCursor, shouldRenderCursor_get)) {
        cursor.style.visibility = "hidden";
        return cursor;
    }
    cursor.innerHTML = getParsedBody(this.opts.cursorChar).innerHTML;
    return cursor;
}, _addSplitPause = new WeakSet(), addSplitPause_fn = function(items) {
    let delay = this.opts.nextStringDelay;
    this.queue.add([
        {
            delay: delay[0]
        },
        ...items,
        {
            delay: delay[1]
        }
    ]);
}, _type = new WeakSet(), type_fn = function(char) {
    insertIntoElement(this.element, char);
}, _delete = new WeakSet(), delete_fn = function() {
    if (!__privateGet(this, _allChars, allChars_get).length) return;
    if (__privateGet(this, _isInput, isInput_get)) {
        this.element.value = this.element.value.slice(0, -1);
    } else {
        __privateMethod(this, _removeNode, removeNode_fn).call(this, __privateGet(this, _allChars, allChars_get)[this.cursorPosition]);
    }
}, _removeNode = new WeakSet(), removeNode_fn = function(node) {
    removeNode(node, this.element);
}, _getPace = new WeakSet(), getPace_fn = function(index = 0) {
    return calculatePace(this.opts)[index];
}, _derivedCursorPosition = new WeakSet(), derivedCursorPosition_get = function() {
    return this.predictedCursorPosition ?? this.cursorPosition;
}, _isInput = new WeakSet(), isInput_get = function() {
    return isInput(this.element);
}, _shouldRenderCursor = new WeakSet(), shouldRenderCursor_get = function() {
    return !!this.opts.cursor && !__privateGet(this, _isInput, isInput_get);
}, _allChars = new WeakSet(), allChars_get = function() {
    return getAllChars(this.element);
}, _a);
const DynamicElementComponent = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["forwardRef"])((props, ref)=>{
    const { as: As } = props;
    return /* @__PURE__ */ __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["default"].createElement(As, {
        ref,
        ...props
    });
});
const defaultPropOptions = {};
const TypeIt = ({ as = "span", options = defaultPropOptions, children = null, getBeforeInit = (instance)=>instance, getAfterInit = (instance)=>instance, ...remainingProps })=>{
    const elementRef = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["useRef"])(null);
    const instanceRef = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["useRef"])(null);
    const [shouldShowChildren, setShouldShowChildren] = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["useState"])(true);
    const [instanceOptions, setInstanceOptions] = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["useState"])(null);
    function calculateOptions() {
        const optionsClone = Object.assign({}, options);
        if (children && elementRef.current) {
            optionsClone.strings = elementRef.current.innerHTML;
        }
        setInstanceOptions(optionsClone);
    }
    function generateNewInstance() {
        instanceRef.current = new TypeIt$1(elementRef.current, instanceOptions);
        instanceRef.current = getBeforeInit(instanceRef.current);
        instanceRef.current.go();
        instanceRef.current = getAfterInit(instanceRef.current);
    }
    (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["useEffect"])(()=>{
        calculateOptions();
        setShouldShowChildren(false);
    }, [
        options
    ]);
    (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["useEffect"])(()=>{
        var _a2;
        if (!instanceOptions) return;
        ((_a2 = instanceRef.current) == null ? void 0 : _a2.updateOptions(instanceOptions)) || generateNewInstance();
    }, [
        instanceOptions
    ]);
    (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["useEffect"])(()=>{
        return ()=>{
            var _a2;
            return (_a2 = instanceRef.current) == null ? void 0 : _a2.destroy();
        };
    }, []);
    return /* @__PURE__ */ __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["default"].createElement(DynamicElementComponent, {
        ref: elementRef,
        as,
        children: shouldShowChildren ? children : null,
        style: {
            opacity: shouldShowChildren ? 0 : 1
        },
        ...remainingProps
    });
};
;

})()),
"[project]/node_modules/@emailjs/browser/es/models/EmailJSResponseStatus.js [app-client] (ecmascript)": (({ r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, g: global, __dirname, k: __turbopack_refresh__ }) => (() => {
"use strict";

__turbopack_esm__({
    "EmailJSResponseStatus": ()=>EmailJSResponseStatus
});
class EmailJSResponseStatus {
    constructor(_status = 0, _text = 'Network Error'){
        this.status = _status;
        this.text = _text;
    }
}

})()),
"[project]/node_modules/@emailjs/browser/es/utils/createWebStorage/createWebStorage.js [app-client] (ecmascript)": (({ r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, g: global, __dirname, k: __turbopack_refresh__ }) => (() => {
"use strict";

__turbopack_esm__({
    "createWebStorage": ()=>createWebStorage
});
const createWebStorage = ()=>{
    if (typeof localStorage === 'undefined') return;
    return {
        get: (key)=>Promise.resolve(localStorage.getItem(key)),
        set: (key, value)=>Promise.resolve(localStorage.setItem(key, value)),
        remove: (key)=>Promise.resolve(localStorage.removeItem(key))
    };
};

})()),
"[project]/node_modules/@emailjs/browser/es/store/store.js [app-client] (ecmascript)": (({ r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, g: global, __dirname, k: __turbopack_refresh__ }) => (() => {
"use strict";

__turbopack_esm__({
    "store": ()=>store
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$emailjs$2f$browser$2f$es$2f$utils$2f$createWebStorage$2f$createWebStorage$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@emailjs/browser/es/utils/createWebStorage/createWebStorage.js [app-client] (ecmascript)");
"__TURBOPACK__ecmascript__hoisting__location__";
;
const store = {
    origin: 'https://api.emailjs.com',
    blockHeadless: false,
    storageProvider: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$emailjs$2f$browser$2f$es$2f$utils$2f$createWebStorage$2f$createWebStorage$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["createWebStorage"])()
};

})()),
"[project]/node_modules/@emailjs/browser/es/utils/buildOptions/buildOptions.js [app-client] (ecmascript)": (({ r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, g: global, __dirname, k: __turbopack_refresh__ }) => (() => {
"use strict";

__turbopack_esm__({
    "buildOptions": ()=>buildOptions
});
const buildOptions = (options)=>{
    if (!options) return {};
    // support compatibility with SDK v3
    if (typeof options === 'string') {
        return {
            publicKey: options
        };
    }
    // eslint-disable-next-line @typescript-eslint/no-base-to-string
    if (options.toString() === '[object Object]') {
        return options;
    }
    return {};
};

})()),
"[project]/node_modules/@emailjs/browser/es/methods/init/init.js [app-client] (ecmascript)": (({ r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, g: global, __dirname, k: __turbopack_refresh__ }) => (() => {
"use strict";

__turbopack_esm__({
    "init": ()=>init
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$emailjs$2f$browser$2f$es$2f$store$2f$store$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@emailjs/browser/es/store/store.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$emailjs$2f$browser$2f$es$2f$utils$2f$buildOptions$2f$buildOptions$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@emailjs/browser/es/utils/buildOptions/buildOptions.js [app-client] (ecmascript)");
"__TURBOPACK__ecmascript__hoisting__location__";
;
;
const init = (options, origin = 'https://api.emailjs.com')=>{
    if (!options) return;
    const opts = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$emailjs$2f$browser$2f$es$2f$utils$2f$buildOptions$2f$buildOptions$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["buildOptions"])(options);
    __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$emailjs$2f$browser$2f$es$2f$store$2f$store$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["store"].publicKey = opts.publicKey;
    __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$emailjs$2f$browser$2f$es$2f$store$2f$store$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["store"].blockHeadless = opts.blockHeadless;
    __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$emailjs$2f$browser$2f$es$2f$store$2f$store$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["store"].storageProvider = opts.storageProvider;
    __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$emailjs$2f$browser$2f$es$2f$store$2f$store$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["store"].blockList = opts.blockList;
    __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$emailjs$2f$browser$2f$es$2f$store$2f$store$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["store"].limitRate = opts.limitRate;
    __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$emailjs$2f$browser$2f$es$2f$store$2f$store$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["store"].origin = opts.origin || origin;
};

})()),
"[project]/node_modules/@emailjs/browser/es/api/sendPost.js [app-client] (ecmascript)": (({ r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, g: global, __dirname, k: __turbopack_refresh__ }) => (() => {
"use strict";

__turbopack_esm__({
    "sendPost": ()=>sendPost
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$emailjs$2f$browser$2f$es$2f$models$2f$EmailJSResponseStatus$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@emailjs/browser/es/models/EmailJSResponseStatus.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$emailjs$2f$browser$2f$es$2f$store$2f$store$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@emailjs/browser/es/store/store.js [app-client] (ecmascript)");
"__TURBOPACK__ecmascript__hoisting__location__";
;
;
const sendPost = async (url, data, headers = {})=>{
    const response = await fetch(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$emailjs$2f$browser$2f$es$2f$store$2f$store$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["store"].origin + url, {
        method: 'POST',
        headers,
        body: data
    });
    const message = await response.text();
    const responseStatus = new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$emailjs$2f$browser$2f$es$2f$models$2f$EmailJSResponseStatus$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["EmailJSResponseStatus"](response.status, message);
    if (response.ok) {
        return responseStatus;
    }
    throw responseStatus;
};

})()),
"[project]/node_modules/@emailjs/browser/es/utils/validateParams/validateParams.js [app-client] (ecmascript)": (({ r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, g: global, __dirname, k: __turbopack_refresh__ }) => (() => {
"use strict";

__turbopack_esm__({
    "validateParams": ()=>validateParams
});
const validateParams = (publicKey, serviceID, templateID)=>{
    if (!publicKey || typeof publicKey !== 'string') {
        throw 'The public key is required. Visit https://dashboard.emailjs.com/admin/account';
    }
    if (!serviceID || typeof serviceID !== 'string') {
        throw 'The service ID is required. Visit https://dashboard.emailjs.com/admin';
    }
    if (!templateID || typeof templateID !== 'string') {
        throw 'The template ID is required. Visit https://dashboard.emailjs.com/admin/templates';
    }
};

})()),
"[project]/node_modules/@emailjs/browser/es/utils/validateTemplateParams/validateTemplateParams.js [app-client] (ecmascript)": (({ r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, g: global, __dirname, k: __turbopack_refresh__ }) => (() => {
"use strict";

__turbopack_esm__({
    "validateTemplateParams": ()=>validateTemplateParams
});
const validateTemplateParams = (templateParams)=>{
    // eslint-disable-next-line @typescript-eslint/no-base-to-string
    if (templateParams && templateParams.toString() !== '[object Object]') {
        throw 'The template params have to be the object. Visit https://www.emailjs.com/docs/sdk/send/';
    }
};

})()),
"[project]/node_modules/@emailjs/browser/es/utils/isHeadless/isHeadless.js [app-client] (ecmascript)": (({ r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, g: global, __dirname, k: __turbopack_refresh__ }) => (() => {
"use strict";

__turbopack_esm__({
    "isHeadless": ()=>isHeadless
});
const isHeadless = (navigator)=>{
    return navigator.webdriver || !navigator.languages || navigator.languages.length === 0;
};

})()),
"[project]/node_modules/@emailjs/browser/es/errors/headlessError/headlessError.js [app-client] (ecmascript)": (({ r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, g: global, __dirname, k: __turbopack_refresh__ }) => (() => {
"use strict";

__turbopack_esm__({
    "headlessError": ()=>headlessError
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$emailjs$2f$browser$2f$es$2f$models$2f$EmailJSResponseStatus$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@emailjs/browser/es/models/EmailJSResponseStatus.js [app-client] (ecmascript)");
"__TURBOPACK__ecmascript__hoisting__location__";
;
const headlessError = ()=>{
    return new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$emailjs$2f$browser$2f$es$2f$models$2f$EmailJSResponseStatus$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["EmailJSResponseStatus"](451, 'Unavailable For Headless Browser');
};

})()),
"[project]/node_modules/@emailjs/browser/es/utils/validateBlockListParams/validateBlockListParams.js [app-client] (ecmascript)": (({ r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, g: global, __dirname, k: __turbopack_refresh__ }) => (() => {
"use strict";

__turbopack_esm__({
    "validateBlockListParams": ()=>validateBlockListParams
});
const validateBlockListParams = (list, watchVariable)=>{
    if (!Array.isArray(list)) {
        throw 'The BlockList list has to be an array';
    }
    if (typeof watchVariable !== 'string') {
        throw 'The BlockList watchVariable has to be a string';
    }
};

})()),
"[project]/node_modules/@emailjs/browser/es/utils/isBlockedValueInParams/isBlockedValueInParams.js [app-client] (ecmascript)": (({ r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, g: global, __dirname, k: __turbopack_refresh__ }) => (() => {
"use strict";

__turbopack_esm__({
    "isBlockedValueInParams": ()=>isBlockedValueInParams
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$emailjs$2f$browser$2f$es$2f$utils$2f$validateBlockListParams$2f$validateBlockListParams$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@emailjs/browser/es/utils/validateBlockListParams/validateBlockListParams.js [app-client] (ecmascript)");
"__TURBOPACK__ecmascript__hoisting__location__";
;
const isBlockListDisabled = (options)=>{
    return !options.list?.length || !options.watchVariable;
};
const getValue = (data, name)=>{
    return data instanceof FormData ? data.get(name) : data[name];
};
const isBlockedValueInParams = (options, params)=>{
    if (isBlockListDisabled(options)) return false;
    (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$emailjs$2f$browser$2f$es$2f$utils$2f$validateBlockListParams$2f$validateBlockListParams$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["validateBlockListParams"])(options.list, options.watchVariable);
    const value = getValue(params, options.watchVariable);
    if (typeof value !== 'string') return false;
    return options.list.includes(value);
};

})()),
"[project]/node_modules/@emailjs/browser/es/errors/blockedEmailError/blockedEmailError.js [app-client] (ecmascript)": (({ r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, g: global, __dirname, k: __turbopack_refresh__ }) => (() => {
"use strict";

__turbopack_esm__({
    "blockedEmailError": ()=>blockedEmailError
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$emailjs$2f$browser$2f$es$2f$models$2f$EmailJSResponseStatus$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@emailjs/browser/es/models/EmailJSResponseStatus.js [app-client] (ecmascript)");
"__TURBOPACK__ecmascript__hoisting__location__";
;
const blockedEmailError = ()=>{
    return new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$emailjs$2f$browser$2f$es$2f$models$2f$EmailJSResponseStatus$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["EmailJSResponseStatus"](403, 'Forbidden');
};

})()),
"[project]/node_modules/@emailjs/browser/es/utils/validateLimitRateParams/validateLimitRateParams.js [app-client] (ecmascript)": (({ r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, g: global, __dirname, k: __turbopack_refresh__ }) => (() => {
"use strict";

__turbopack_esm__({
    "validateLimitRateParams": ()=>validateLimitRateParams
});
const validateLimitRateParams = (throttle, id)=>{
    if (typeof throttle !== 'number' || throttle < 0) {
        throw 'The LimitRate throttle has to be a positive number';
    }
    if (id && typeof id !== 'string') {
        throw 'The LimitRate ID has to be a string';
    }
};

})()),
"[project]/node_modules/@emailjs/browser/es/utils/isLimitRateHit/isLimitRateHit.js [app-client] (ecmascript)": (({ r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, g: global, __dirname, k: __turbopack_refresh__ }) => (() => {
"use strict";

__turbopack_esm__({
    "isLimitRateHit": ()=>isLimitRateHit
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$emailjs$2f$browser$2f$es$2f$utils$2f$validateLimitRateParams$2f$validateLimitRateParams$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@emailjs/browser/es/utils/validateLimitRateParams/validateLimitRateParams.js [app-client] (ecmascript)");
"__TURBOPACK__ecmascript__hoisting__location__";
;
const getLeftTime = async (id, throttle, storage)=>{
    const lastTime = Number(await storage.get(id) || 0);
    return throttle - Date.now() + lastTime;
};
const isLimitRateHit = async (defaultID, options, storage)=>{
    if (!options.throttle || !storage) {
        return false;
    }
    (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$emailjs$2f$browser$2f$es$2f$utils$2f$validateLimitRateParams$2f$validateLimitRateParams$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["validateLimitRateParams"])(options.throttle, options.id);
    const id = options.id || defaultID;
    const leftTime = await getLeftTime(id, options.throttle, storage);
    if (leftTime > 0) {
        return true;
    }
    await storage.set(id, Date.now().toString());
    return false;
};

})()),
"[project]/node_modules/@emailjs/browser/es/errors/limitRateError/limitRateError.js [app-client] (ecmascript)": (({ r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, g: global, __dirname, k: __turbopack_refresh__ }) => (() => {
"use strict";

__turbopack_esm__({
    "limitRateError": ()=>limitRateError
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$emailjs$2f$browser$2f$es$2f$models$2f$EmailJSResponseStatus$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@emailjs/browser/es/models/EmailJSResponseStatus.js [app-client] (ecmascript)");
"__TURBOPACK__ecmascript__hoisting__location__";
;
const limitRateError = ()=>{
    return new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$emailjs$2f$browser$2f$es$2f$models$2f$EmailJSResponseStatus$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["EmailJSResponseStatus"](429, 'Too Many Requests');
};

})()),
"[project]/node_modules/@emailjs/browser/es/methods/send/send.js [app-client] (ecmascript)": (({ r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, g: global, __dirname, k: __turbopack_refresh__ }) => (() => {
"use strict";

__turbopack_esm__({
    "send": ()=>send
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$emailjs$2f$browser$2f$es$2f$store$2f$store$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@emailjs/browser/es/store/store.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$emailjs$2f$browser$2f$es$2f$api$2f$sendPost$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@emailjs/browser/es/api/sendPost.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$emailjs$2f$browser$2f$es$2f$utils$2f$buildOptions$2f$buildOptions$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@emailjs/browser/es/utils/buildOptions/buildOptions.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$emailjs$2f$browser$2f$es$2f$utils$2f$validateParams$2f$validateParams$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@emailjs/browser/es/utils/validateParams/validateParams.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$emailjs$2f$browser$2f$es$2f$utils$2f$validateTemplateParams$2f$validateTemplateParams$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@emailjs/browser/es/utils/validateTemplateParams/validateTemplateParams.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$emailjs$2f$browser$2f$es$2f$utils$2f$isHeadless$2f$isHeadless$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@emailjs/browser/es/utils/isHeadless/isHeadless.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$emailjs$2f$browser$2f$es$2f$errors$2f$headlessError$2f$headlessError$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@emailjs/browser/es/errors/headlessError/headlessError.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$emailjs$2f$browser$2f$es$2f$utils$2f$isBlockedValueInParams$2f$isBlockedValueInParams$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@emailjs/browser/es/utils/isBlockedValueInParams/isBlockedValueInParams.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$emailjs$2f$browser$2f$es$2f$errors$2f$blockedEmailError$2f$blockedEmailError$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@emailjs/browser/es/errors/blockedEmailError/blockedEmailError.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$emailjs$2f$browser$2f$es$2f$utils$2f$isLimitRateHit$2f$isLimitRateHit$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@emailjs/browser/es/utils/isLimitRateHit/isLimitRateHit.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$emailjs$2f$browser$2f$es$2f$errors$2f$limitRateError$2f$limitRateError$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@emailjs/browser/es/errors/limitRateError/limitRateError.js [app-client] (ecmascript)");
"__TURBOPACK__ecmascript__hoisting__location__";
;
;
;
;
;
;
;
;
;
;
;
const send = async (serviceID, templateID, templateParams, options)=>{
    const opts = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$emailjs$2f$browser$2f$es$2f$utils$2f$buildOptions$2f$buildOptions$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["buildOptions"])(options);
    const publicKey = opts.publicKey || __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$emailjs$2f$browser$2f$es$2f$store$2f$store$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["store"].publicKey;
    const blockHeadless = opts.blockHeadless || __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$emailjs$2f$browser$2f$es$2f$store$2f$store$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["store"].blockHeadless;
    const storageProvider = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$emailjs$2f$browser$2f$es$2f$store$2f$store$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["store"].storageProvider || opts.storageProvider;
    const blockList = {
        ...__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$emailjs$2f$browser$2f$es$2f$store$2f$store$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["store"].blockList,
        ...opts.blockList
    };
    const limitRate = {
        ...__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$emailjs$2f$browser$2f$es$2f$store$2f$store$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["store"].limitRate,
        ...opts.limitRate
    };
    if (blockHeadless && (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$emailjs$2f$browser$2f$es$2f$utils$2f$isHeadless$2f$isHeadless$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["isHeadless"])(navigator)) {
        return Promise.reject((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$emailjs$2f$browser$2f$es$2f$errors$2f$headlessError$2f$headlessError$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["headlessError"])());
    }
    (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$emailjs$2f$browser$2f$es$2f$utils$2f$validateParams$2f$validateParams$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["validateParams"])(publicKey, serviceID, templateID);
    (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$emailjs$2f$browser$2f$es$2f$utils$2f$validateTemplateParams$2f$validateTemplateParams$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["validateTemplateParams"])(templateParams);
    if (templateParams && (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$emailjs$2f$browser$2f$es$2f$utils$2f$isBlockedValueInParams$2f$isBlockedValueInParams$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["isBlockedValueInParams"])(blockList, templateParams)) {
        return Promise.reject((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$emailjs$2f$browser$2f$es$2f$errors$2f$blockedEmailError$2f$blockedEmailError$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["blockedEmailError"])());
    }
    if (await (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$emailjs$2f$browser$2f$es$2f$utils$2f$isLimitRateHit$2f$isLimitRateHit$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["isLimitRateHit"])(location.pathname, limitRate, storageProvider)) {
        return Promise.reject((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$emailjs$2f$browser$2f$es$2f$errors$2f$limitRateError$2f$limitRateError$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["limitRateError"])());
    }
    const params = {
        lib_version: '4.3.3',
        user_id: publicKey,
        service_id: serviceID,
        template_id: templateID,
        template_params: templateParams
    };
    return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$emailjs$2f$browser$2f$es$2f$api$2f$sendPost$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["sendPost"])('/api/v1.0/email/send', JSON.stringify(params), {
        'Content-type': 'application/json'
    });
};

})()),
"[project]/node_modules/@emailjs/browser/es/utils/validateForm/validateForm.js [app-client] (ecmascript)": (({ r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, g: global, __dirname, k: __turbopack_refresh__ }) => (() => {
"use strict";

__turbopack_esm__({
    "validateForm": ()=>validateForm
});
const validateForm = (form)=>{
    if (!form || form.nodeName !== 'FORM') {
        throw 'The 3rd parameter is expected to be the HTML form element or the style selector of the form';
    }
};

})()),
"[project]/node_modules/@emailjs/browser/es/methods/sendForm/sendForm.js [app-client] (ecmascript)": (({ r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, g: global, __dirname, k: __turbopack_refresh__ }) => (() => {
"use strict";

__turbopack_esm__({
    "sendForm": ()=>sendForm
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$emailjs$2f$browser$2f$es$2f$store$2f$store$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@emailjs/browser/es/store/store.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$emailjs$2f$browser$2f$es$2f$api$2f$sendPost$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@emailjs/browser/es/api/sendPost.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$emailjs$2f$browser$2f$es$2f$utils$2f$buildOptions$2f$buildOptions$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@emailjs/browser/es/utils/buildOptions/buildOptions.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$emailjs$2f$browser$2f$es$2f$utils$2f$validateForm$2f$validateForm$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@emailjs/browser/es/utils/validateForm/validateForm.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$emailjs$2f$browser$2f$es$2f$utils$2f$validateParams$2f$validateParams$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@emailjs/browser/es/utils/validateParams/validateParams.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$emailjs$2f$browser$2f$es$2f$utils$2f$isHeadless$2f$isHeadless$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@emailjs/browser/es/utils/isHeadless/isHeadless.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$emailjs$2f$browser$2f$es$2f$errors$2f$headlessError$2f$headlessError$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@emailjs/browser/es/errors/headlessError/headlessError.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$emailjs$2f$browser$2f$es$2f$utils$2f$isBlockedValueInParams$2f$isBlockedValueInParams$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@emailjs/browser/es/utils/isBlockedValueInParams/isBlockedValueInParams.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$emailjs$2f$browser$2f$es$2f$errors$2f$blockedEmailError$2f$blockedEmailError$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@emailjs/browser/es/errors/blockedEmailError/blockedEmailError.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$emailjs$2f$browser$2f$es$2f$utils$2f$isLimitRateHit$2f$isLimitRateHit$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@emailjs/browser/es/utils/isLimitRateHit/isLimitRateHit.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$emailjs$2f$browser$2f$es$2f$errors$2f$limitRateError$2f$limitRateError$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@emailjs/browser/es/errors/limitRateError/limitRateError.js [app-client] (ecmascript)");
"__TURBOPACK__ecmascript__hoisting__location__";
;
;
;
;
;
;
;
;
;
;
;
const findHTMLForm = (form)=>{
    return typeof form === 'string' ? document.querySelector(form) : form;
};
const sendForm = async (serviceID, templateID, form, options)=>{
    const opts = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$emailjs$2f$browser$2f$es$2f$utils$2f$buildOptions$2f$buildOptions$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["buildOptions"])(options);
    const publicKey = opts.publicKey || __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$emailjs$2f$browser$2f$es$2f$store$2f$store$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["store"].publicKey;
    const blockHeadless = opts.blockHeadless || __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$emailjs$2f$browser$2f$es$2f$store$2f$store$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["store"].blockHeadless;
    const storageProvider = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$emailjs$2f$browser$2f$es$2f$store$2f$store$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["store"].storageProvider || opts.storageProvider;
    const blockList = {
        ...__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$emailjs$2f$browser$2f$es$2f$store$2f$store$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["store"].blockList,
        ...opts.blockList
    };
    const limitRate = {
        ...__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$emailjs$2f$browser$2f$es$2f$store$2f$store$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["store"].limitRate,
        ...opts.limitRate
    };
    if (blockHeadless && (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$emailjs$2f$browser$2f$es$2f$utils$2f$isHeadless$2f$isHeadless$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["isHeadless"])(navigator)) {
        return Promise.reject((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$emailjs$2f$browser$2f$es$2f$errors$2f$headlessError$2f$headlessError$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["headlessError"])());
    }
    const currentForm = findHTMLForm(form);
    (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$emailjs$2f$browser$2f$es$2f$utils$2f$validateParams$2f$validateParams$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["validateParams"])(publicKey, serviceID, templateID);
    (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$emailjs$2f$browser$2f$es$2f$utils$2f$validateForm$2f$validateForm$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["validateForm"])(currentForm);
    const formData = new FormData(currentForm);
    if ((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$emailjs$2f$browser$2f$es$2f$utils$2f$isBlockedValueInParams$2f$isBlockedValueInParams$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["isBlockedValueInParams"])(blockList, formData)) {
        return Promise.reject((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$emailjs$2f$browser$2f$es$2f$errors$2f$blockedEmailError$2f$blockedEmailError$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["blockedEmailError"])());
    }
    if (await (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$emailjs$2f$browser$2f$es$2f$utils$2f$isLimitRateHit$2f$isLimitRateHit$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["isLimitRateHit"])(location.pathname, limitRate, storageProvider)) {
        return Promise.reject((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$emailjs$2f$browser$2f$es$2f$errors$2f$limitRateError$2f$limitRateError$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["limitRateError"])());
    }
    formData.append('lib_version', '4.3.3');
    formData.append('service_id', serviceID);
    formData.append('template_id', templateID);
    formData.append('user_id', publicKey);
    return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$emailjs$2f$browser$2f$es$2f$api$2f$sendPost$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["sendPost"])('/api/v1.0/email/send-form', formData);
};

})()),
"[project]/node_modules/@emailjs/browser/es/index.js [app-client] (ecmascript) <locals>": (({ r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, g: global, __dirname, k: __turbopack_refresh__ }) => (() => {
"use strict";

__turbopack_esm__({
    "default": ()=>__TURBOPACK__default__export__
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$emailjs$2f$browser$2f$es$2f$methods$2f$init$2f$init$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@emailjs/browser/es/methods/init/init.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$emailjs$2f$browser$2f$es$2f$methods$2f$send$2f$send$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@emailjs/browser/es/methods/send/send.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$emailjs$2f$browser$2f$es$2f$methods$2f$sendForm$2f$sendForm$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@emailjs/browser/es/methods/sendForm/sendForm.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$emailjs$2f$browser$2f$es$2f$models$2f$EmailJSResponseStatus$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@emailjs/browser/es/models/EmailJSResponseStatus.js [app-client] (ecmascript)");
"__TURBOPACK__ecmascript__hoisting__location__";
;
;
;
;
;
const __TURBOPACK__default__export__ = {
    init: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$emailjs$2f$browser$2f$es$2f$methods$2f$init$2f$init$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["init"],
    send: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$emailjs$2f$browser$2f$es$2f$methods$2f$send$2f$send$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["send"],
    sendForm: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$emailjs$2f$browser$2f$es$2f$methods$2f$sendForm$2f$sendForm$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["sendForm"],
    EmailJSResponseStatus: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$emailjs$2f$browser$2f$es$2f$models$2f$EmailJSResponseStatus$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["EmailJSResponseStatus"]
};

})()),
"[project]/node_modules/@emailjs/browser/es/index.js [app-client] (ecmascript) <module evaluation>": (({ r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, g: global, __dirname }) => (() => {
"use strict";

__turbopack_esm__({});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$emailjs$2f$browser$2f$es$2f$models$2f$EmailJSResponseStatus$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@emailjs/browser/es/models/EmailJSResponseStatus.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$emailjs$2f$browser$2f$es$2f$methods$2f$init$2f$init$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@emailjs/browser/es/methods/init/init.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$emailjs$2f$browser$2f$es$2f$methods$2f$send$2f$send$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@emailjs/browser/es/methods/send/send.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$emailjs$2f$browser$2f$es$2f$methods$2f$sendForm$2f$sendForm$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@emailjs/browser/es/methods/sendForm/sendForm.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$emailjs$2f$browser$2f$es$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$locals$3e$__ = __turbopack_import__("[project]/node_modules/@emailjs/browser/es/index.js [app-client] (ecmascript) <locals>");
"__TURBOPACK__ecmascript__hoisting__location__";

})()),
}]);

//# sourceMappingURL=node_modules_aa8282._.js.map